{
  "format_version": "1.19.0",
  "minecraft:entity": {
    "description": {
      "identifier": "minecraft:villager_v2",
      "is_spawnable": true,
      "is_summonable": false,
      "is_experimental": false
    },

    // NOTE:
    // "minecraft:share_items" component was moved inside of "baby" and "adult" component groups
    // to be added when those are added. This is to allow for more modular shareable behavior.
    //  - for shareables, "want_amount" and "surplus_amount" are additive.
  
    "component_groups": {
      "minecraft:celebrate": {
        "minecraft:behavior.celebrate_survive": {
          "priority": 5,
          "fireworks_interval": {
            "range_min": 2.0,
            "range_max": 7.0
          },
          "duration": 30.0,
          "on_celebration_end_event": {
            "event": "minecraft:stop_celebrating",
            "target": "self"
          }
        },
        "minecraft:behavior.move_outdoors": {
          "priority": 2,
          "speed_multiplier": 0.8,
          "timeout_cooldown": 8.0
        }
      },
      
      "trade_resupply_component_group": {
        "minecraft:trade_resupply": {}
      },

      "become_witch": {
        "minecraft:transformation": {
          "into": "minecraft:witch",
          "delay": 0.5
        }
      },

      "become_zombie": {
        "minecraft:transformation": {
          "into": "minecraft:zombie_villager_v2",
          "keep_level": true
        }
      },

      // here so that it can be re-added if needed via event.
      "default_share_items": {
        "minecraft:behavior.share_items": {
          "priority": 10,
          "max_dist": 3,
          "goal_radius":  2.0,
          "speed_multiplier": 0.5,
          "entity_types": [
            {
              "filters": { "test" :  "is_family", "subject" : "other", "value" :  "villager"}
            }
          ]
        }
      },

      "can_be_tempted": {
        "minecraft:behavior.tempt": {
          "priority": 5,
          "speed_multiplier":  0.75,
          "within_radius": 10,
          "can_tempt_vertically": true,
          "items": [
            "minecraft:hay_block"
          ]
        }
      },
      
      "work_schedule": {
        "minecraft:scheduler": {
          "min_delay_secs": 0,
          "max_delay_secs": 10,
          "scheduled_events" : [
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 0 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 8000 }
                ]
              },
              "event": "minecraft:schedule_work_pro_villager"
            },
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 8000 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 10000 }
                ]
              },
              "event": "minecraft:schedule_gather_villager"
            },
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 10000 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 11000 }
                ]
              },
              "event": "minecraft:schedule_work_pro_villager"
            },
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 11000 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 12000 }
                ]
              },
              "event": "minecraft:schedule_home_villager"
            },
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 12000 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 24000 }
                ]
              },
              "event": "minecraft:schedule_bed_villager"
            }
          ]
        }
      },

      "basic_schedule": {
        "minecraft:scheduler": {
          "min_delay_secs": 0,
          "max_delay_secs": 10,
          "scheduled_events" : [
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 0 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 8000 }
                ]
              },
              "event": "minecraft:schedule_wander_villager"
            },
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 8000 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 10000}
                ]
              },
              "event": "minecraft:schedule_gather_villager"
            },
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 10000 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 11000 }
                ]
              },
              "event": "minecraft:schedule_wander_villager"
            },
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 11000 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 12000 }
                ]
              },
              "event": "minecraft:schedule_home_villager"
            },
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 12000 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 24000 }
                ]
              },
              "event": "minecraft:schedule_bed_villager"
            }
          ]
        }
      },

      "child_schedule": {
        "minecraft:scheduler": {
          "min_delay_secs": 0,
          "max_delay_secs": 10,
          "scheduled_events" : [
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 0 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 11000 }
                ]
              },
              "event": "minecraft:schedule_play_villager"
            },
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 11000 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 12000 }
                ]
              },
              "event": "minecraft:schedule_home_villager"
            },
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 12000 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 24000 }
                ]
              },
              "event": "minecraft:schedule_bed_villager"
            }
          ]
        }
      },

      "jobless_schedule": {
        "minecraft:scheduler": {
          "min_delay_secs": 0,
          "max_delay_secs": 10,
          "scheduled_events" : [
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 2000 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 13000 }
                ]
              },
              "event": "minecraft:schedule_wander_villager"
            },
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 13000 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 14000 }
                ]
              },
              "event": "minecraft:schedule_home_villager"
            },
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 14000 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 24000 }
                ]
              },
              "event": "minecraft:schedule_bed_villager"
            },
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 0 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 2000 }
                ]
              },
              "event": "minecraft:schedule_bed_villager"
            }
          ]
        }
      },

      "fisher_schedule": {
        "minecraft:scheduler": {
          "min_delay_secs": 0,
          "max_delay_secs": 10,
          "scheduled_events" : [
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 0 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 8000 }
                ]
              },
              "event": "minecraft:schedule_work_fisher"
            },
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 8000 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 10000 }
                ]
              },
              "event": "minecraft:schedule_gather_villager"
            },
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 10000 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 11000 }
                ]
              },
              "event": "minecraft:schedule_work_fisher"
            },
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 11000 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 12000 }
                ]
              },
              "event": "minecraft:schedule_home_villager"
            },
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 12000 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 24000 }
                ]
              },
              "event": "minecraft:schedule_bed_villager"
            }
          ]
        }
      },

      "librarian_schedule": {
        "minecraft:scheduler": {
          "min_delay_secs": 0,
          "max_delay_secs": 10,
          "scheduled_events" : [
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 0 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 8000 }
                ]
              },
              "event": "minecraft:schedule_work_librarian"
            },
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 8000 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 10000 }
                ]
              },
              "event": "minecraft:schedule_gather_villager"
            },
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 10000 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 11000 }
                ]
              },
              "event": "minecraft:schedule_work_librarian"
            },
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 11000 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 12000 }
                ]
              },
              "event": "minecraft:schedule_home_villager"
            },
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 12000 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 24000 }
                ]
              },
              "event": "minecraft:schedule_bed_villager"
            }
          ]
        }
      },

      "farmer_schedule": {
        "minecraft:scheduler": {
          "min_delay_secs": 0,
          "max_delay_secs": 10,
          "scheduled_events" : [
            // Because farmer is essentially managed by the farmer schedule, changes should be
            // made in the scheduler. Ctrl + F it.
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 0 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 8000 }
                ]
              },
              "event": "minecraft:schedule_work_farmer"
            },
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 8000 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 10000 }
                ]
              },
              "event": "minecraft:schedule_gather_villager"
            },
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 10000 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 11000 }
                ]
              },
              "event": "minecraft:schedule_work_farmer"
            },
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 11000 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 12000 }
                ]
              },
              "event": "minecraft:schedule_home_villager"
            },
            {
              "filters": {
                "all_of": [
                  { "test": "hourly_clock_time", "operator": ">=", "value": 12000 },
                  { "test": "hourly_clock_time", "operator": "<", "value": 24000 }
                ]
              },
              "event": "minecraft:schedule_bed_villager"
            }
          ]
        }
      },
      
      //every goal that has to do with villagers working should go here (work goals, secondary goals)
      //so they can be successfuly removed on schedule change
      "job_specific_goals": {
        "minecraft:behavior.inspect_bookshelf": {},
        "minecraft:behavior.harvest_farm_block": {},
        "minecraft:behavior.fertilize_farm_block": {},  //why was this not here..? Mojang??
        "minecraft:behavior.move_to_block": {},   // ("look_for_guide_stone" component group)
        "minecraft:behavior.explore_outskirts": {},
        "minecraft:behavior.work": {},
        "minecraft:behavior.work_composter": {},
        "minecraft:behavior.mingle": {},
        "minecraft:behavior.sleep": {}
      },
      
      "work_schedule_villager": {
        "minecraft:behavior.work": {
          "priority": 7,
          "active_time": 250,
          "speed_multiplier": 0.5,
          "goal_cooldown": 200,
          "sound_delay_min": 100,
          "sound_delay_max": 200,
          "can_work_in_rain": false,
          "work_in_rain_tolerance": 100,
          "on_arrival": {
            "event": "minecraft:resupply_trades",
            "target": "self"
          }
        }
      },

      "work_schedule_fisher": {
        "minecraft:behavior.work": {
          "priority": 7,
          "active_time": 250,
          "speed_multiplier": 0.5,
          "goal_cooldown": 200,
          "sound_delay_min": 100,
          "sound_delay_max": 200,
          "can_work_in_rain": false,
          "work_in_rain_tolerance": 100,
          "on_arrival": {
            "event": "minecraft:resupply_trades",
            "target": "self"
          }
        }
      },

      // MRxSIR: tweaking farmer to do complex tasks
      // refer to "schedule_work_farmer"
      "work_schedule_farmer": {
        // default shareables taken from here to new component group
        "minecraft:behavior.work_composter": {
          "priority": 9,
          "active_time": 250,
          "speed_multiplier": 0.5,
          "goal_cooldown": 200,
          "can_work_in_rain": false,
          "work_in_rain_tolerance": 100,
          "on_arrival": {
            "event": "minecraft:resupply_trades",
            "target": "self"
          },
          "can_empty_composter": true,
          "can_fill_composter": true,
          "block_interaction_max": 5  //default is 1
          //https://learn.microsoft.com/en-us/minecraft/creator/reference/content/entityreference/examples/entitygoals/minecraftbehavior_work_composter?view=minecraft-bedrock-stable
        },
        "minecraft:behavior.harvest_farm_block": {
          "priority": 8,          //default is 7
          "goal_radius": 1.55,     //default 1.5 (problems with crops south-east of blocks sometimes)
          "max_seconds_before_search": 0.5 //default is 1.0
        },
        // I feel like when the farmer works the composter, he should have a timer that restarts
        // its countdown each time he interacts with the composter, then the possibility of working
        // the composter is temporarily removed while fertilizing farm blocks is temporarily given
        // priority over harvesting. After some time, restore to defaults though. This would prevent
        // bugginess and increase productivity of the farm as a whole.
        "minecraft:behavior.fertilize_farm_block": {
          "priority": 7,       //default is 8
          "search_count": 0,   //searches all blocks in the radius
          "search_range": 8,
          "search_height": 2,
          "search_cooldown_max_seconds": 0.25,    // maybe 0.5 in the future?
          "goal_radius": 1.25
        }
      },

      "farmer_default_shareables": {
        "minecraft:shareables": {
          "items": [
            {
              "item": "minecraft:bread",
              "want_amount": 3,
              "surplus_amount": 6,
              "stored_in_inventory": true
            },
            {
              "item": "minecraft:carrot",
              "want_amount": 60,
              "surplus_amount": 24,
              "stored_in_inventory": true
            },
            {
              "item": "minecraft:potato",
              "want_amount": 60,
              "surplus_amount": 24,
              "stored_in_inventory": true
            },
            {
              "item": "minecraft:beetroot",
              "want_amount": 60,
              "surplus_amount": 24,
              "stored_in_inventory": true
            },
            {
              "item": "minecraft:wheat_seeds",
              "want_amount": 64,
              "surplus_amount": 64,
              "stored_in_inventory": true,
              "pickup_only": true
            },
            {
              "item": "minecraft:beetroot_seeds",
              "want_amount": 64,
              "surplus_amount": 64,
              "stored_in_inventory": true,
              "pickup_only": true
            },
            {
              "item": "minecraft:bone_meal",
              "want_amount": 64,
              "surplus_amount": 64,
              "stored_in_inventory": true
            },
            {
              "item": "minecraft:wheat",
              "want_amount": 45,
              "surplus_amount": 18,
              "craft_into": "minecraft:bread",
              "stored_in_inventory": true
            }
          ]
        }
      },

      "look_for_guide_stone": {
        // farmer gets to guide_stone then shares crops to nearest hopper_marker entity within 20 blocks
        // Cooldown is 6 min, or until a schedule change reapplies it.
        "minecraft:behavior.move_to_block": {
          // When it's raining, "move_indoors" has priority of 6 and this goal won't run at 9.
          // At 6, it does run (good).
          "priority": 6,
          "tick_interval": 30,    // Average ticks to try to run this behavior (default 20)
          "search_range": 32,
          "speed_multiplier": 0.6,
          "goal_radius": 2.5,
          "stay_duration": 30,    // 1.5 seconds
          "target_selection_method": "nearest",
          "target_blocks": [ "mrsir:farmer_guide_stone" ],

          "on_reach": {
            "event": "arrived_at_guide_stone"
          }
          // guide stone must be reasonably close/in sight of farmer for it to fire.
          // "on_reach" fires somewhat prematurely sometimes.
          // "on_arrival" sometimes takes forever.
        }
      },

      "look_for_guide_stone_cooldown": {
        "minecraft:timer": {
          "looping": false,
          "time": 360,  //6 min
          "time_down_event": {
            "event": "add_look_for_guide_stone",
            "target": "self"
          }
        }
      },

      "share_crops_to_hopper_marker": {
        "minecraft:behavior.share_items": {
          "priority": 5,          // if 4 or lower, villager won't avoid dangerous mobs.
          "max_dist": 20,
          "goal_radius":  2.5,
          "speed_multiplier": 0.55,
          "entity_types": [
            {
              "filters": { "test" : "is_family", "subject": "other", "value":  "hopper_marker" }
            }
          ]
        },
        "minecraft:shareables": {
          "items": [
            {
              "item": "minecraft:carrot",
              "want_amount": 60,
              "surplus_amount": 24,
              "stored_in_inventory": true
            },
            {
              "item": "minecraft:potato",
              "want_amount": 60,
              "surplus_amount": 24,
              "stored_in_inventory": true
            },
            {
              "item": "minecraft:beetroot",
              "want_amount": 60,
              "surplus_amount": 24,
              "stored_in_inventory": true
            },
            {
              "item": "minecraft:wheat",
              "want_amount": 45,
              "surplus_amount": 18,
              "stored_in_inventory": true
            },
            {
              "item": "minecraft:wheat_seeds",
              "want_amount": 64,
              "surplus_amount": 64,
              "stored_in_inventory": true,
              "pickup_only": true
            },
            {
              "item": "minecraft:beetroot_seeds",
              "want_amount": 64,
              "surplus_amount": 64,
              "stored_in_inventory": true,
              "pickup_only": true
            },
            {
              "item": "minecraft:bone_meal",
              "want_amount": 64,
              "surplus_amount": 64,
              "stored_in_inventory": true,
              "pickup_only": true
            },
            {
              "item": "minecraft:bread",
              "want_amount": 3,
              "surplus_amount": 6,
              "stored_in_inventory": true,
              "pickup_only": true
            }
          ]
        },
        "minecraft:timer": {
          "looping": false,
          "time": 75,
          "time_down_event": {
            "event": "timeout_share_crops_to_hopper_marker",
            "target": "self"
          }
        }
      },

      "work_schedule_librarian": {
        "minecraft:behavior.work": {
          "priority": 7,
          "active_time": 250,
          "speed_multiplier": 0.5,
          "goal_cooldown": 200,
          "sound_delay_min": 100,
          "sound_delay_max": 200,
          "can_work_in_rain": false,
          "work_in_rain_tolerance": 100,
          "on_arrival": {
            "event": "minecraft:resupply_trades",
            "target": "self"
          }
        },
        "minecraft:behavior.inspect_bookshelf": {
          "priority": 8,
          "speed_multiplier": 0.6,
          "search_range": 4,
          "search_height": 3,
          "goal_radius": 0.8,
          "search_count": 0
        }
      },

      "play_schedule_villager": {
        "minecraft:behavior.play": {
          "priority": 8,
          "speed_multiplier": 0.32
        }
      },

      "gather_schedule_villager": {
        "minecraft:behavior.mingle": {
          "priority": 7,
          "speed_multiplier": 0.5,
          "duration": 30,
          "cooldown_time": 10,
          "mingle_partner_type": "minecraft:villager_v2",
          "mingle_distance": 2.0
        }
      },

      "home_schedule_villager": {

      },

      "bed_schedule_villager": {
        "minecraft:behavior.sleep": {
          "priority": 3,
          "goal_radius": 1.5,
          "speed_multiplier": 0.6,
          "sleep_collider_height": 0.3,
          "sleep_collider_width": 1.0,
          "sleep_y_offset": 0.6,
          "timeout_cooldown": 10.0
        }
      },

      "wander_schedule_villager": {
        "minecraft:behavior.explore_outskirts": {
          "priority": 9,
          "next_xz": 5,
          "next_y": 3,
          "min_wait_time": 3.0,
          "max_wait_time": 10.0,
          "max_travel_time": 60.0,
          "speed_multiplier": 0.6,
          "explore_dist": 6.0,
          "min_perimeter": 1.0,
          "min_dist_from_target": 2.5,
          "timer_ratio": 2.0,
          "dist_from_boundary": [ 5.0, 0.0, 5.0 ]
        }
      },

      "behavior_peasant": {
        "minecraft:shareables": {
          "items": [
            {
              "item": "minecraft:bread",
              "want_amount": 3,
              "surplus_amount": 6,
              "stored_in_inventory": true
            },
            {
              "item": "minecraft:carrot",
              "want_amount": 60,
              "surplus_amount": 24,
              "stored_in_inventory": true
            },
            {
              "item": "minecraft:potato",
              "want_amount": 60,
              "surplus_amount": 24,
              "stored_in_inventory": true
            },
            {
              "item": "minecraft:beetroot",
              "want_amount": 60,
              "surplus_amount": 24,
              "stored_in_inventory": true
            },
            {
              "item": "minecraft:wheat_seeds",
              "want_amount": 64,
              "surplus_amount": 64,
              "stored_in_inventory": true,
              "pickup_only": true
            },
            {
              "item": "minecraft:beetroot_seeds",
              "want_amount": 64,
              "surplus_amount": 64,
              "stored_in_inventory": true,
              "pickup_only": true
            },
            {
              "item": "minecraft:wheat",
              "want_amount": 45,
              "surplus_amount": 18,
              "craft_into": "minecraft:bread",
              "stored_in_inventory": true
            }
          ]
        }
      },

      "behavior_non_peasant": {
        "minecraft:shareables": {
          "items": [
            {
              "item": "minecraft:bread",
              "want_amount": 3,
              "surplus_amount": 6,
              "stored_in_inventory": true
            },
            {
              "item": "minecraft:carrot",
              "want_amount": 12,
              "surplus_amount": 24,
              "stored_in_inventory": true
            },
            {
              "item": "minecraft:potato",
              "want_amount": 12,
              "surplus_amount": 24,
              "stored_in_inventory": true
            },
            {
              "item": "minecraft:beetroot",
              "want_amount": 12,
              "surplus_amount": 24,
              "stored_in_inventory": true
            }
          ]
        }
      },

      // A grouping of components that should never be added
      // however, they are here to flush out any artifact component groups
      // that might linger between villager job switches
      // MRxSIR: also used as a way to remove trading from villager on demand
      "trade_components": {
        "minecraft:behavior.trade_interest": {},
        "minecraft:economy_trade_table": {}
      },
      
      "unskilled": {
        "minecraft:type_family": {
          "family": [ "villager", "peasant", "unskilled", "mob" ]
        },
        "minecraft:variant": {
          "value": 0
        }
      },

      "farmer": {
        "minecraft:type_family": {
          "family": [ "villager", "peasant", "farmer", "mob" ]
        },
        "minecraft:variant": {
          "value": 1
        },
        "minecraft:behavior.trade_interest": {
          "priority": 5,
          "within_radius": 6.0,
          "interest_time": 45.0,
          "remove_item_time": 1.0,
          "carried_item_switch_time": 2.0,
          "cooldown": 2.0
        },
        "minecraft:economy_trade_table": {
          "display_name": "entity.villager.farmer",
          "table": "trading/economy_trades/farmer_trades.json",
          "new_screen": true,
          "persist_trades": true,
          "cured_discount": [-100, -100],
          "max_cured_discount": [-500, -500]
        },
        "minecraft:dweller": {
          "dwelling_type": "village",
          "dweller_role": "inhabitant",
          "preferred_profession": "farmer",
          "update_interval_base": 60,
          "update_interval_variant": 40,
          "can_find_poi": true,
          "can_migrate": true,
          "first_founding_reward": 5
        }
      },
        

      "fisherman": {
        "minecraft:type_family": {
          "family": [ "villager", "peasant", "fisherman", "mob" ]
        },
        "minecraft:variant": {
          "value": 2
        },
        "minecraft:behavior.trade_interest": {
          "priority": 5,
          "within_radius": 6.0,
          "interest_time": 45.0,
          "remove_item_time": 1.0,
          "carried_item_switch_time": 2.0,
          "cooldown": 2.0
        },
        "minecraft:economy_trade_table": {
          "display_name": "entity.villager.fisherman",
          "table": "trading/economy_trades/fisherman_trades.json",
          "new_screen": true,
          "persist_trades": true,
          "cured_discount": [-100, -100],
          "max_cured_discount": [-500, -500]
        },
        "minecraft:dweller": {
          "dwelling_type": "village",
          "dweller_role": "inhabitant",
          "preferred_profession": "fisherman",
          "update_interval_base": 60,
          "update_interval_variant": 40,
          "can_find_poi": true,
          "can_migrate": true,
          "first_founding_reward": 5
        }
      },

      "shepherd": {
        "minecraft:type_family": {
          "family": [ "villager", "peasant", "shepherd", "mob" ]
        },
        "minecraft:variant": {
          "value": 3
        },
        "minecraft:behavior.trade_interest": {
          "priority": 5,
          "within_radius": 6.0,
          "interest_time": 45.0,
          "remove_item_time": 1.0,
          "carried_item_switch_time": 2.0,
          "cooldown": 2.0
        },
        "minecraft:economy_trade_table": {
          "display_name": "entity.villager.shepherd",
          "table": "trading/economy_trades/shepherd_trades.json",
          "new_screen": true,
          "persist_trades": true,
          "cured_discount": [-100, -100],
          "max_cured_discount": [-500, -500]
        },
        "minecraft:dweller": {
          "dwelling_type": "village",
          "dweller_role": "inhabitant",
          "preferred_profession": "shepherd",
          "update_interval_base": 60,
          "update_interval_variant": 40,
          "can_find_poi": true,
          "can_migrate": true,
          "first_founding_reward": 5
        }
      },

      "fletcher": {
        "minecraft:type_family": {
          "family": [ "villager", "peasant", "fletcher", "mob" ]
        },
        "minecraft:variant": {
          "value": 4
        },
        "minecraft:behavior.trade_interest": {
          "priority": 5,
          "within_radius": 6.0,
          "interest_time": 45.0,
          "remove_item_time": 1.0,
          "carried_item_switch_time": 2.0,
          "cooldown": 2.0
        },
        "minecraft:economy_trade_table": {
          "display_name": "entity.villager.fletcher",
          "table": "trading/economy_trades/fletcher_trades.json",
          "new_screen": true,
          "persist_trades": true,
          "cured_discount": [-100, -100],
          "max_cured_discount": [-500, -500]
        },
        "minecraft:dweller": {
          "dwelling_type": "village",
          "dweller_role": "inhabitant",
          "preferred_profession": "fletcher",
          "update_interval_base": 60,
          "update_interval_variant": 40,
          "can_find_poi": true,
          "can_migrate": true,
          "first_founding_reward": 5
        }
      },

      "librarian": {
        "minecraft:type_family": {
          "family": [ "villager", "librarian", "mob" ]
        },
        "minecraft:variant": {
          "value": 5
        },
        "minecraft:behavior.trade_interest": {
          "priority": 5,
          "within_radius": 6.0,
          "interest_time": 45.0,
          "remove_item_time": 1.0,
          "carried_item_switch_time": 2.0,
          "cooldown": 2.0
        },
        "minecraft:economy_trade_table": {
          "display_name": "entity.villager.librarian",
          "table": "trading/economy_trades/librarian_trades.json",
          "new_screen": true,
          "persist_trades": true,
          "cured_discount": [-100, -100],
          "max_cured_discount": [-500, -500]
        },
        "minecraft:dweller": {
          "dwelling_type": "village",
          "dweller_role": "inhabitant",
          "preferred_profession": "librarian",
          "update_interval_base": 60,
          "update_interval_variant": 40,
          "can_find_poi": true,
          "can_migrate": true,
          "first_founding_reward": 5
        }
      },

      "cartographer": {
        "minecraft:type_family": {
          "family": [ "villager", "cartographer", "mob" ]
        },
        "minecraft:variant": {
          "value": 6
        },
        "minecraft:behavior.trade_interest": {
          "priority": 5,
          "within_radius": 6.0,
          "interest_time": 45.0,
          "remove_item_time": 1.0,
          "carried_item_switch_time": 2.0,
          "cooldown": 2.0
        },
        "minecraft:economy_trade_table": {
          "display_name": "entity.villager.cartographer",
          "table": "trading/economy_trades/cartographer_trades.json",
          "new_screen": true,
          "persist_trades": true,
          "cured_discount": [-100, -100],
          "max_cured_discount": [-500, -500]
        },
        "minecraft:dweller": {
          "dwelling_type": "village",
          "dweller_role": "inhabitant",
          "preferred_profession": "cartographer",
          "update_interval_base": 60,
          "update_interval_variant": 40,
          "can_find_poi": true,
          "can_migrate": true,
          "first_founding_reward": 5
        }
      },

      "cleric": {
        "minecraft:type_family": {
          "family": [ "villager", "priest", "cleric", "mob" ]
        },
        "minecraft:variant": {
          "value": 7
        },
        "minecraft:behavior.trade_interest": {
          "priority": 5,
          "within_radius": 6.0,
          "interest_time": 45.0,
          "remove_item_time": 1.0,
          "carried_item_switch_time": 2.0,
          "cooldown": 2.0
        },
        "minecraft:economy_trade_table": {
          "display_name": "entity.villager.cleric",
          "table": "trading/economy_trades/cleric_trades.json",
          "new_screen": true,
          "persist_trades": true,
          "cured_discount": [-100, -100],
          "max_cured_discount": [-500, -500]
        },
        "minecraft:dweller": {
          "dwelling_type": "village",
          "dweller_role": "inhabitant",
          "preferred_profession": "cleric",
          "update_interval_base": 60,
          "update_interval_variant": 40,
          "can_find_poi": true,
          "can_migrate": true,
          "first_founding_reward": 5
        }
      },

      "armorer": {
        "minecraft:type_family": {
          "family": [ "villager", "blacksmith", "armorer", "mob" ]
        },
        "minecraft:variant": {
          "value": 8
        },
        "minecraft:behavior.trade_interest": {
          "priority": 5,
          "within_radius": 6.0,
          "interest_time": 45.0,
          "remove_item_time": 1.0,
          "carried_item_switch_time": 2.0,
          "cooldown": 2.0
        },
        "minecraft:economy_trade_table": {
          "display_name": "entity.villager.armor",
          "table": "trading/economy_trades/armorer_trades.json",
          "new_screen": true,
          "persist_trades": true,
          "cured_discount": [-100, -100],
          "max_cured_discount": [-500, -500]
        },
        "minecraft:dweller": {
          "dwelling_type": "village",
          "dweller_role": "inhabitant",
          "preferred_profession": "armorer",
          "update_interval_base": 60,
          "update_interval_variant": 40,
          "can_find_poi": true,
          "can_migrate": true,
          "first_founding_reward": 5
        }
      },

      "weaponsmith": {
        "minecraft:type_family": {
          "family": [ "villager", "blacksmith", "weaponsmith", "mob" ]
        },
        "minecraft:variant": {
          "value": 9
        },
        "minecraft:behavior.trade_interest": {
          "priority": 5,
          "within_radius": 6.0,
          "interest_time": 45.0,
          "remove_item_time": 1.0,
          "carried_item_switch_time": 2.0,
          "cooldown": 2.0
        },
        "minecraft:economy_trade_table": {
          "display_name": "entity.villager.weapon",
          "table": "trading/economy_trades/weapon_smith_trades.json",
          "new_screen": true,
          "persist_trades": true,
          "cured_discount": [-100, -100],
          "max_cured_discount": [-500, -500]
        },
        "minecraft:dweller": {
          "dwelling_type": "village",
          "dweller_role": "inhabitant",
          "preferred_profession": "weaponsmith",
          "update_interval_base": 60,
          "update_interval_variant": 40,
          "can_find_poi": true,
          "can_migrate": true,
          "first_founding_reward": 5
        }
      },

      "toolsmith": {
        "minecraft:type_family": {
          "family": [ "villager", "blacksmith", "toolsmith", "mob" ]
        },
        "minecraft:variant": {
          "value": 10
        },
        "minecraft:behavior.trade_interest": {
          "priority": 5,
          "within_radius": 6.0,
          "interest_time": 45.0,
          "remove_item_time": 1.0,
          "carried_item_switch_time": 2.0,
          "cooldown": 2.0
        },
        "minecraft:economy_trade_table": {
          "display_name": "entity.villager.tool",
          "table": "trading/economy_trades/tool_smith_trades.json",
          "new_screen": true,
          "persist_trades": true,
          "cured_discount": [-100, -100],
          "max_cured_discount": [-500, -500]
        },
        "minecraft:dweller": {
          "dwelling_type": "village",
          "dweller_role": "inhabitant",
          "preferred_profession": "toolsmith",
          "update_interval_base": 60,
          "update_interval_variant": 40,
          "can_find_poi": true,
          "can_migrate": true,
          "first_founding_reward": 5
        }
      },

      "butcher": {
        "minecraft:type_family": {
          "family": [ "villager", "artisan", "butcher", "mob" ]
        },
        "minecraft:variant": {
          "value": 11
        },
        "minecraft:behavior.trade_interest": {
          "priority": 5,
          "within_radius": 6.0,
          "interest_time": 45.0,
          "remove_item_time": 1.0,
          "carried_item_switch_time": 2.0,
          "cooldown": 2.0
        },
        "minecraft:economy_trade_table": {
          "display_name": "entity.villager.butcher",
          "table": "trading/economy_trades/butcher_trades.json",
          "new_screen": true,
          "persist_trades": true,
          "cured_discount": [-100, -100],
          "max_cured_discount": [-500, -500]
        },
        "minecraft:dweller": {
          "dwelling_type": "village",
          "dweller_role": "inhabitant",
          "preferred_profession": "butcher",
          "update_interval_base": 60,
          "update_interval_variant": 40,
          "can_find_poi": true,
          "can_migrate": true,
          "first_founding_reward": 5
        }
      },

      "leatherworker": {
        "minecraft:type_family": {
          "family": [ "villager", "artisan", "leatherworker", "mob" ]
        },
        "minecraft:variant": {
          "value": 12
        },
        "minecraft:behavior.trade_interest": {
          "priority": 5,
          "within_radius": 6.0,
          "interest_time": 45.0,
          "remove_item_time": 1.0,
          "carried_item_switch_time": 2.0,
          "cooldown": 2.0
        },
        "minecraft:economy_trade_table": {
          "display_name": "entity.villager.leather",
          "table": "trading/economy_trades/leather_worker_trades.json",
          "new_screen": true,
          "persist_trades": true,
          "cured_discount": [-100, -100],
          "max_cured_discount": [-500, -500]
        },
        "minecraft:dweller": {
          "dwelling_type": "village",
          "dweller_role": "inhabitant",
          "preferred_profession": "leatherworker",
          "update_interval_base": 60,
          "update_interval_variant": 40,
          "can_find_poi": true,
          "can_migrate": true,
          "first_founding_reward": 5
        }
      },

      "mason": {
        "minecraft:type_family": {
          "family": [ "villager", "artisan", "stone_mason", "mob" ]
        },
        "minecraft:variant": {
          "value": 13
        },
        "minecraft:behavior.trade_interest": {
          "priority": 5,
          "within_radius": 6.0,
          "interest_time": 45.0,
          "remove_item_time": 1.0,
          "carried_item_switch_time": 2.0,
          "cooldown": 2.0
        },
        "minecraft:economy_trade_table": {
          "display_name": "entity.villager.mason",
          "table": "trading/economy_trades/stone_mason_trades.json",
          "new_screen": true,
          "persist_trades": true,
          "cured_discount": [-100, -100],
          "max_cured_discount": [-500, -500]
        },
        "minecraft:dweller": {
          "dwelling_type": "village",
          "dweller_role": "inhabitant",
          "preferred_profession": "mason",
          "update_interval_base": 60,
          "update_interval_variant": 40,
          "can_find_poi": true,
          "can_migrate": true,
          "first_founding_reward": 5
        }
      },

      "nitwit":{
        "minecraft:type_family": {
          "family":[ "villager", "peasant", "nitwit", "mob" ]          
        },
        "minecraft:variant": {
          "value": 14
        }
      },

      // new profession, separate file
      "builder": {
        "minecraft:type_family": {
          "family": ["villager", "builder", "villager_to_builder", "mob"]
        },
        "minecraft:transformation": {
          "into": "bvp:builder_villager",
          "keep_level": true
        }
      },

      "become_builder_delayed": {
        "minecraft:type_family": {
          "family": ["villager", "builder", "villager_to_builder", "mob"]
        },
        "minecraft:transformation": {
          "into": "bvp:builder_villager",
          "keep_level": true,
          "delay": 0.75
        }
      },

      "baby": {
        "minecraft:is_baby": {  },
        "minecraft:scale": {
          "value":0.5
        },
        "minecraft:ageable": {
          "duration": 1200,
          "grow_up": {
            "event": "minecraft:ageable_grow_up",
            "target": "self"
          }
        },
        "minecraft:behavior.take_flower":{
          "priority": 9
        },
        "minecraft:behavior.share_items": {   //same as default
          "priority": 10,
          "max_dist": 3,
          "goal_radius":  2.0,
          "speed_multiplier": 0.5,
          "entity_types": [
            {
              "filters": { "test" :  "is_family", "subject" : "other", "value" :  "villager"}
            }
          ]
        },
        "minecraft:preferred_path" : {
          "max_fall_blocks" : 1,
          "jump_cost" : 5,
          "default_block_cost" : 1.5,
          "preferred_path_blocks" : [
            { 
              "cost" : 0,
              "blocks" : [ 
                "grass_path"
              ]
            },
            { 
              "cost" : 1,
              "blocks" : [ 
                "cobblestone", 
                "stone",
                "stonebrick",
                "sandstone",
                "mossy_cobblestone",
                "stone_slab",
                "stone_slab2",
                "stone_slab3",
                "stone_slab4",
                "double_stone_slab",
                "double_stone_slab2",
                "double_stone_slab3",
                "double_stone_slab4",
                "wooden_slab",
                "double_wooden_slab",
                "planks",
                "brick_block",
                "nether_brick",
                "red_nether_brick",
                "end_bricks",
                "red_sandstone",
                "stained_glass",
                "glass",
                "glowstone",
                "prismarine",
                "emerald_block",
                "diamond_block",
                "lapis_block",
                "gold_block",
                "redstone_block",
                "purple_glazed_terracotta",
                "white_glazed_terracotta",
                "orange_glazed_terracotta",
                "magenta_glazed_terracotta",
                "light_blue_glazed_terracotta",
                "yellow_glazed_terracotta",
                "lime_glazed_terracotta",
                "pink_glazed_terracotta",
                "gray_glazed_terracotta",
                "silver_glazed_terracotta",
                "cyan_glazed_terracotta",
                "blue_glazed_terracotta",
                "brown_glazed_terracotta",
                "green_glazed_terracotta",
                "red_glazed_terracotta",
                "black_glazed_terracotta"
               ]
            },
            { 
              "cost" : 50,
              "blocks" : [ 
                "bed",
                "lectern",
                "composter",
                "grindstone",
                "blast_furnace",
                "smoker",
                "fletching_table",
                "cartography_table",
                "brewing_stand",
                "smithing_table",
                "cauldron",
                "barrel",
                "loom",
                "stonecutter"
              ]
            }
          ]
        }
      },

      "adult": {
        "minecraft:behavior.make_love": {
          "priority": 5
        },
        "minecraft:behavior.receive_love": {
          "priority": 6
        },
        "minecraft:behavior.share_items": {   //same as default
          "priority": 10,
          "max_dist": 3,
          "goal_radius":  2.0,
          "speed_multiplier": 0.5,
          "entity_types": [
            {
              "filters": { "test" :  "is_family", "subject" : "other", "value" :  "villager"}
            }
          ]
        },
        "minecraft:preferred_path" : {
          "max_fall_blocks" : 1,
          "jump_cost" : 12,     //default is 20, but causes pathing issues with grass_paths
          "default_block_cost" : 3,
          "preferred_path_blocks" : [
            { 
              "cost" : 0.5,     //to help reduce pathing issues with doorwars + paths (was 0)
              "blocks" : [ 
                "grass_path"
              ]
            },
            { 
              "cost" : 1,
              "blocks" : [ 
                "cobblestone", 
                "stone",
                "stonebrick",
                "sandstone",
                "mossy_cobblestone",
                "stone_slab",
                "stone_slab2",
                "stone_slab3",
                "stone_slab4",
                "double_stone_slab",
                "double_stone_slab2",
                "double_stone_slab3",
                "double_stone_slab4",
                "wooden_slab",
                "double_wooden_slab",
                "planks",
                "brick_block",
                "nether_brick",
                "red_nether_brick",
                "end_bricks",
                "red_sandstone",
                "stained_glass",
                "glass",
                "glowstone",
                "prismarine",
                "emerald_block",
                "diamond_block",
                "lapis_block",
                "gold_block",
                "redstone_block",
                "purple_glazed_terracotta",
                "white_glazed_terracotta",
                "orange_glazed_terracotta",
                "magenta_glazed_terracotta",
                "light_blue_glazed_terracotta",
                "yellow_glazed_terracotta",
                "lime_glazed_terracotta",
                "pink_glazed_terracotta",
                "gray_glazed_terracotta",
                "silver_glazed_terracotta",
                "cyan_glazed_terracotta",
                "blue_glazed_terracotta",
                "brown_glazed_terracotta",
                "green_glazed_terracotta",
                "red_glazed_terracotta",
                "black_glazed_terracotta"
               ]
            },
            { 
              "cost" : 50,
              "blocks" : [ 
                "bed",
                "lectern",
                "composter",
                "grindstone",
                "blast_furnace",
                "smoker",
                "fletching_table",
                "cartography_table",
                "brewing_stand",
                "smithing_table",
                "cauldron",
                "barrel",
                "loom",
                "stonecutter"
              ]
            }
          ]
        }
      },

      "villager_skin_0": {
        "minecraft:skin_id": {
          "value": 0
        }
      },

      "villager_skin_1": {
        "minecraft:skin_id": {
          "value": 1
        }
      },

      "villager_skin_2": {
        "minecraft:skin_id": {
          "value": 2
        }
      },

      "villager_skin_3": {
        "minecraft:skin_id": {
          "value": 3
        }
      },

      "villager_skin_4": {
        "minecraft:skin_id": {
          "value": 4
        }
      },

      "villager_skin_5": {
        "minecraft:skin_id": {
          "value": 5
        }
      },

      "plains_villager": {    //unused except for manual testing
        "minecraft:mark_variant": {
          "value": 0
        }
      },

      "desert_villager": {
        "minecraft:mark_variant": {
          "value": 1
        }
      },

      "jungle_villager": {
        "minecraft:mark_variant": {
          "value": 2
        }
      },

      "savanna_villager": {
        "minecraft:mark_variant": {
          "value": 3
        }
      },

      "snow_villager": {
        "minecraft:mark_variant": {
          "value": 4
        }
      },

      "swamp_villager": {
        "minecraft:mark_variant": {
          "value": 5
        }
      },

      "taiga_villager": {
        "minecraft:mark_variant": {
          "value": 6
        }
      },

      //things for Albert Whitefish song easter egg
      "gather_for_albert_whitefish_song": {
        "minecraft:behavior.follow_mob": {
          "search_range": 20,
          "stop_distance": 2.5,
          "priority": 5,
          "speed_multiplier": 0.5
        }
      },

      "check_for_singing_conditions": {
        "minecraft:timer": {
          "time": 4,
          "looping": true,
          "time_down_event": {
            "event": "check_for_audience",
            "target": "self"
          }
        }
      },

      "albert_whitefish_song_timer": {
        "minecraft:timer": {
          "time": 52,   //the song is ~45 seconds long
          "looping": false,
          "time_down_event": {
            "event": "ended_albert_whitefish_song"
          }
        }
      }
    },

    "components": { //Core components of all villagers
      "minecraft:is_hidden_when_invisible": {
      },
      "minecraft:type_family": {
        "family": ["villager", "mob"]
      },
      "minecraft:mark_variant": {
        "value": 0 // Villagers have the Plains biome skin by default
      },
      "minecraft:breathable": {
        "total_supply": 15,
        "suffocate_time": 0
      },
      "minecraft:health": {
        "value": 20,
        "max": 20
      },
      "minecraft:conditional_bandwidth_optimization": {
      },
      "minecraft:hurt_on_condition": {
        "damage_conditions": [
          {
            "filters": { "test": "in_lava", "subject": "self", "operator": "==", "value": true },
            "cause": "lava",
            "damage_per_tick": 4
          }
        ]
      },
      "minecraft:hide": {
      },
      "minecraft:collision_box": {
        "width": 0.6,
        "height": 1.9
      },
      "minecraft:nameable": { //altered by MR SIR to allow villager renaming
        "allow_name_tag_renaming": true,
        "always_show": false
      },
      "minecraft:movement": {
        "value": 0.5
      },
      "minecraft:navigation.walk": {
        "can_path_over_water": true,
        "can_pass_doors": true,
        "can_open_doors": true,
        "avoid_water": true
      },
      "minecraft:follow_range": {
        "value": 128
      },
      "minecraft:annotation.open_door": {
      },
      "minecraft:movement.basic": {
      },
      "minecraft:jump.static": {
      },
      "minecraft:can_climb": {
      },
      "minecraft:inventory": {
        "inventory_size": 10,  // 8 by default
        "private": false,      // true by default, false as a feature now
        "container_type": "inventory"
      },
      "minecraft:dweller": {
        "dwelling_type": "village",
        "dweller_role": "inhabitant",
        "update_interval_base": 60,
        "update_interval_variant": 40,
        "can_find_poi": true,
        "can_migrate": true,
        "first_founding_reward": 5
      },
      "minecraft:damage_sensor": {
        "triggers": [
          {
            "on_damage": {
              "filters": [
                {
                  "test": "is_family",
                  "subject": "other",
                  "value": "lightning"
                },
                {
                  "test": "is_difficulty",
                  "operator": "!=",
                  "value": "peaceful"
                }
              ],
              "event": "become_witch"
            },
            "deals_damage": false
          },
          {
            "on_damage": {
              "filters": {
                "any_of": [
                  {"test": "is_family", "subject": "other", "value": "zombie"},
                  {"test": "is_family", "subject": "other", "value": "husk"}
                ],
                "all_of": [
                  {"test": "has_damage", "value": "fatal"}
                ]
              },
              "event": "become_zombie"
            }
          }
        ]
      },
      "minecraft:persistent": {
      },
      "minecraft:behavior.float": {
        "priority": 0
      },
      "minecraft:behavior.hide": {
        "priority": 0,
        "speed_multiplier": 0.8,
        "poi_type": "bed",
        "duration": 30.0
      },
      "minecraft:behavior.panic": {
        "priority": 1,
        "speed_multiplier": 0.6
      },
      "minecraft:behavior.trade_with_player": {
        "priority": 2
      },
      "minecraft:behavior.avoid_mob_type": {
        "priority": 4,
        "entity_types": [
          {
            "filters": { 
                "any_of": [
                  { "test" : "is_family", "subject" : "other", "value" : "zombie"},
                  { "test" : "is_family", "subject" : "other", "value" : "zombie_villager"},
                  { "test" : "is_family", "subject" : "other", "value" : "illager"},
                  { "test" : "is_family", "subject" : "other", "value" : "vex"},
                  { "test" : "is_family", "subject" : "other", "value" : "zoglin" }
                ]
            },
            "max_dist": 8,
            "walk_speed_multiplier": 0.6,
            "sprint_speed_multiplier": 0.6
          }
        ]
      },
      "minecraft:behavior.pickup_items": {
        "priority": 4,
        "max_dist": 4,      // default is 3
        "goal_radius": 2,
        "speed_multiplier": 0.5,
        "can_pickup_to_hand_or_equipment": false
      },
      "minecraft:behavior.move_indoors": {
        "priority": 6,
        "speed_multiplier": 0.8,
        "timeout_cooldown": 8.0
      },
      "minecraft:behavior.look_at_trading_player": {
        "priority": 7
      },
      "minecraft:behavior.look_at_player": {
        "priority": 11,     //original is 9. They stop what they're doing to look at 9 so...
        "look_distance": 8,
        "probability": 0.02,
        "look_time": [2, 5] //vanilla doesn't have this
      },

      //*************************************************************************
      //NOTE: Moved "minecraft:behavior.share_items" to inside "baby" and "adult" component 
      // groups so that I can add another, separate sharing functionality.

      "minecraft:behavior.move_towards_dwelling_restriction": {
        "priority": 11,
        "speed_multiplier": 0.6
      },
      "minecraft:behavior.random_stroll": {
        "priority": 11,
        "speed_multiplier": 0.6
      },
        "minecraft:physics": {
      },
      "minecraft:pushable": {
        "is_pushable": true,
        "is_pushable_by_piston": true
      },

      "minecraft:interact": {
        "interactions": [
          {
            "interact_text": "Lead villager while holding a hay bale",
            "on_interact": {
              "event": "add_can_be_tempted",
              "filters": {
                "all_of": [
                  {
                    "test": "has_tag",
                    "subject": "self",
                    "operator": "!=",
                    "value": "can_be_tempted"
                  },
                  {
                    "test": "is_family",
                    "subject": "other",
                    "value": "player"
                  },
                  {
                    "test": "has_equipment",
                    "domain": "hand",
                    "subject": "other",
                    "value": "hay_block"
                  }
                ]
              }
            },
            "use_item": false,
            "play_sounds": "block.click"
          },
          {
            "interact_text": "Stop leading villager with hay bale",
            "on_interact": {
              "event": "remove_can_be_tempted",
              "filters": {
                "all_of": [
                  {
                    "test": "has_tag",
                    "subject": "self",
                    "value": "can_be_tempted"
                  },
                  {
                    "test": "is_family",
                    "subject": "other",
                    "value": "player"
                  },
                  {
                    "test": "has_equipment",
                    "domain": "hand",
                    "subject": "other",
                    "value": "hay_block"
                  }
                ]
              }
            },
            "use_item": false,
            "play_sounds": "block.click.fail"
          },
          
          {
            "interact_text": "Enable access to villager's inventory",
            "on_interact": {
              "event": "remove_trade_components",
              "filters": {
                "all_of": [
                  {
                    "test": "has_tag",
                    "subject": "self",
                    "operator": "!=",
                    "value": "trade_components_off"
                  },
                  {
                    "test": "is_family",
                    "subject": "other",
                    "value": "player"
                  },
                  {
                    "test": "has_equipment",
                    "domain": "hand",
                    "subject": "other",
                    "value": "chest"
                  }
                ]
              }
            },
            "use_item": false,
            "play_sounds": "attach"
          },
          {
            "interact_text": "Disable access to villager's inventory",
            "on_interact": {
              "event": "restore_trade_components",
              "filters": {
                "all_of": [
                  {
                    "test": "has_tag",
                    "subject": "self",
                    "value": "trade_components_off"
                  },
                  {
                    "test": "is_family",
                    "subject": "other",
                    "value": "player"
                  },
                  {
                    "test": "has_equipment",
                    "domain": "hand",
                    "subject": "other",
                    "value": "chest"
                  }
                ]
              }
            },
            "use_item": false,
            "play_sounds": "item.book.put"
          },

          {
            "interact_text": "Make villager a builder",
            "on_interact": {
              "event": "become_builder",
              "filters": {
                "all_of": [
                  {
                    "test": "has_component", "operator": "!=",
                    "subject": "self",
                    "value": "is_baby"
                  },
                  {
                    "test": "is_family",
                    "subject": "self",
                    "value": "unskilled"
                  },
                  {
                    "test": "is_family",
                    "subject": "other",
                    "value": "player"
                  },
                  {
                    "test": "has_equipment",
                    "domain": "hand",
                    "subject": "other",
                    "value": "crafting_table"
                  }
                ]
              }
            },
            "use_item": false
          },

          {//for Albert Whitefish song
            "interact_text": "Tag as song leader",
            "on_interact": {
              "event": "tag_as_song_leader",
              "filters": {
                "all_of": [
                  {
                    "test": "is_family",
                    "subject": "other",
                    "value": "player"
                  },
                  {
                    "any_of": [
                      {
                        "test": "is_sneak_held",
                        "subject": "other",
                        "value": true
                      },
                      {
                        "test": "is_sneaking",
                        "subject": "other",
                        "value": true
                      }
                    ]
                  },
                  {
                    "test": "has_equipment",
                    "domain": "hand",
                    "subject": "other",
                    "value": "stick"
                  }
                ]
              }
            },
            "use_item": false,
            "play_sounds": "haggle.yes"
          }
        ]
      }
    },

    "events": {
      // for say commands, after debugging is done, change to "msg @a[r=10] <message>"      
      "add_can_be_tempted": {
        "add": {
          "component_groups": ["can_be_tempted"]
        },
        "queue_command": {
          "command": [
            "msg @a[r=6] can be tempted with a hay bale",  //for debug
            "tag @s add can_be_tempted"   //allows farmer to self check if tempting is enabled
          ]
        }
      },

      "remove_can_be_tempted": {
        "remove": {
          "component_groups": ["can_be_tempted"]
        },
        "queue_command": {
          "command": [
            "msg @a[r=6] can no longer be tempted.", //for debug
            "tag @s remove can_be_tempted"   //allows farmer to self check if tempting is enabled
          ]
        }
      },

      "add_look_for_guide_stone": {
        "add": {"component_groups": ["look_for_guide_stone"]}
      },

      "remove_look_for_guide_stone": {
        "remove": {"component_groups": ["look_for_guide_stone"]}
      },

      "arrived_at_guide_stone": {
        "sequence": [
          {
            "queue_command": {"command": "msg @a[r=4] arrived at guide stone, looking for hopper marker."}  //for debug
          },
          {
            "trigger": "add_share_crops_to_hopper_marker"
          },
          {
            "remove": {"component_groups": ["look_for_guide_stone"]},
            "add": {"component_groups": ["look_for_guide_stone_cooldown"]}
          }
        ]
      },

      "timeout_share_crops_to_hopper_marker": {           //reapply default sharing behavior
        "sequence": [
          {
            //regardless of occupation, reapply default share items behavior
            "add": {"component_groups": ["default_share_items"]},
            "queue_command": {
              "command": [
                "msg @a[r=4] no longer trying to stow crops to hopper marker."  //for debug
              ]
            }
          },
          {
            //Verify farmer status to prevent adding farmer shareables in case of changed occupation.
            "filters": {
              "test": "is_family",
              "subject": "self",
              "value": "farmer"
            },
            "add": {"component_groups": ["farmer_default_shareables"]}
          }
        ]
      },

      "add_share_crops_to_hopper_marker": {
        "add": {"component_groups": ["share_crops_to_hopper_marker"]}
      },

      "add_farmer_default_shareables": {
        "add": {"component_groups": ["farmer_default_shareables"]}
      },

      "add_default_share_items": {
        "add": {"component_groups": ["default_share_items"]},
        "queue_command": {"command": "msg @a[r=6] added default_share_items."} //for debug
      },

      "remove_trade_components": {
        "remove": {
          "component_groups": ["trade_components"]
        },
        "queue_command": {"command": "tag @s add trade_components_off"}
      },

      "restore_trade_components":{
        "queue_command": {"command": "tag @s remove trade_components_off"},
        "trigger": "reapply_profession"
      },

      // Includes all default professions. If you create a new one, add it here too.
      // This is to restore a villager's behaviors (components) to the correct state.
      // - last block checks for and applies pending trade resupply if necessary.
      "reapply_profession": {
        "sequence": [
          // professions in the order of which variant they are
          {
            "filters": {"test": "is_family", "subject": "self", "value": "farmer" },
            "add": { "component_groups": ["farmer"] }
          },
          {
            "filters": {"test": "is_family", "subject": "self", "value": "fisherman" },
            "add": { "component_groups": ["fisherman"] }
          },
          {
            "filters": {"test": "is_family", "subject": "self", "value": "shepherd" },
            "add": { "component_groups": ["shepherd"] }
          },
          {
            "filters": {"test": "is_family", "subject": "self", "value": "fletcher" },
            "add": { "component_groups": ["fletcher"] }
          },
          {
            "filters": {"test": "is_family", "subject": "self", "value": "librarian" },
            "add": { "component_groups": ["librarian"] }
          },
          {
            "filters": {"test": "is_family", "subject": "self", "value": "cartographer" },
            "add": { "component_groups": ["cartographer"] }
          },
          {
            "filters": {"test": "is_family", "subject": "self", "value": "cleric" },
            "add": { "component_groups": ["cleric"] }
          },
          {
            "filters": {"test": "is_family", "subject": "self", "value": "armorer" },
            "add": { "component_groups": ["armorer"] }
          },
          {
            "filters": {"test": "is_family", "subject": "self", "value": "weaponsmith" },
            "add": { "component_groups": ["weaponsmith"] }
          },
          {
            "filters": {"test": "is_family", "subject": "self", "value": "toolsmith" },
            "add": { "component_groups": ["toolsmith"] }
          },
          {
            "filters": {"test": "is_family", "subject": "self", "value": "butcher" },
            "add": { "component_groups": ["butcher"] }
          },
          {
            "filters": {"test": "is_family", "subject": "self", "value": "leatherworker" },
            "add": { "component_groups": ["leatherworker"] }
          },
          {
            "filters": {"test": "is_family", "subject": "self", "value": "stone_mason" },
            "add": { "component_groups": ["mason"] }  //yes, the names are correct. I checked.
          },
          {// new
            "filters": {"test": "is_family", "subject": "self", "value": "builder" },
            "add": { "component_groups": ["builder"] }
          },
          
          // resupply if one was pending
          {
            "filters": {"subject": "self", "test": "has_tag", "value": "resupply_trades_pending"},
            "add": { "component_groups": [ "trade_resupply_component_group" ] },
            "queue_command": {"command": "tag @s remove resupply_trades_pending"}
          }
        ]
      },

      "mark_variant_0": {
        "trigger": "plains_villager"
      },
      "plains_villager": {
        "add": { "component_groups": [ "plains_villager" ] }
      },

      // API events allowing you to use the interactions from this pack.
      // Override these events in another pack to use.
      //  "interaction_API_alpha": {},
      
      "become_witch": {
        "add": {
          "component_groups": [
            "become_witch"
          ]
        }
      },

      "become_zombie": {
        "sequence": [
          {
            "filters": {"test": "is_difficulty", "value": "normal"},
            "randomize": [
              {
                "weight": 50,
                "add": { "component_groups": [ "become_zombie" ] }
              },
              {
                "weight": 50
              }
            ]
          },
          {
            "filters": {"test": "is_difficulty", "value": "hard"},
            "add": {
              "component_groups": [
                "become_zombie"
              ]
            }
          }
        ]
      },

      "minecraft:entity_spawned": {
        "sequence": [
          {
            "filters": { "test": "has_component", "operator": "!=", "value": "minecraft:skin_id" },
            "randomize": [
              {
                "weight": 1,
                "add": { "component_groups": [ "villager_skin_0" ] }
              },
              {
                "weight": 1,
                "add": { "component_groups": [ "villager_skin_1" ] }
              },
              {
                "weight": 1,
                "add": { "component_groups": [ "villager_skin_2" ] }
              },
              {
                "weight": 1,
                "add": { "component_groups": [ "villager_skin_3" ] }
              },
              {
                "weight": 1,
                "add": { "component_groups": [ "villager_skin_4" ] }
              },
              {
                "weight": 1,
                "add": { "component_groups": [ "villager_skin_5" ] }
              }
            ]
          },
          {
            "filters": {
              "test": "has_component",
              "operator": "!=",
              "value": "minecraft:variant"
            },
            "randomize": [
              {
                "weight": 5,
                "add": { "component_groups": [ "baby", "child_schedule" ] }
              },
              {
                "weight": 95,
                "sequence": [
                  {
                    "add": { "component_groups": [ "adult" ] } 
                  },
                  {
                    "randomize": [
                      {
                        "weight": 1,
                        "add": { "component_groups": [ "farmer", "behavior_peasant", "basic_schedule" ] }
                      },
                      {
                        "weight": 1,
                        "add": { "component_groups": [ "fisherman", "behavior_peasant", "basic_schedule" ] }
                      },
                      {
                        "weight": 1,
                        "add": { "component_groups": [ "shepherd", "behavior_peasant", "basic_schedule" ] }
                      },
                      {
                        "weight": 1,
                        "add": { "component_groups": [ "fletcher", "behavior_peasant", "basic_schedule" ] }
                      },
                      {
                        "weight": 1,
                        "add": { "component_groups": [ "librarian", "behavior_non_peasant", "basic_schedule" ] }
                      },
                      {
                        "weight": 1,
                        "add": { "component_groups": [ "cartographer", "behavior_non_peasant", "basic_schedule" ] }
                      },
                      {
                        "weight": 1,
                        "add": { "component_groups": [ "cleric", "behavior_non_peasant", "basic_schedule" ] }
                      },
                      {
                        "weight": 1,
                        "add": { "component_groups": [ "armorer", "behavior_non_peasant", "basic_schedule" ] }
                      },
                      {
                        "weight": 1,
                        "add": { "component_groups": [ "weaponsmith", "behavior_non_peasant", "basic_schedule" ] }
                      },
                      {
                        "weight": 1,
                        "add": { "component_groups": [ "toolsmith", "behavior_non_peasant", "basic_schedule" ] }
                      },
                      {
                        "weight": 1,
                        "add": { "component_groups": [ "butcher", "behavior_non_peasant", "basic_schedule" ] }
                      },
                      {
                        "weight": 1,
                        "add": { "component_groups": [ "leatherworker", "behavior_non_peasant", "basic_schedule" ] }
                      },
                      {
                        "weight": 1,
                        "add": { "component_groups": [ "mason", "behavior_non_peasant", "basic_schedule" ] }
                      },
                      {
                        "weight": 1,
                        "add": { "component_groups": [ "nitwit", "behavior_peasant", "jobless_schedule" ] }
                      },
                      // new
                      {
                        "weight": 1,
                        "add": {"component_groups": ["become_builder_delayed"]}
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "filters": {
              "any_of": [
                {
                  "test": "has_biome_tag",
                  "value": "desert"
                },
                {
                  "test": "has_biome_tag",
                  "value": "mesa"
                }
              ]
            },
            "add": { "component_groups": [ "desert_villager" ] }
          },
          {
            "filters": {
              "test": "has_biome_tag",
              "value": "jungle"
            },
            "add": { "component_groups": [ "jungle_villager" ] }
          },
          {
            "filters": {
              "test": "has_biome_tag",
              "value": "savanna"
            },
            "add": { "component_groups": [ "savanna_villager" ] }
          },
          {
            "filters": {
              "any_of": [
                {
                  "all_of": [
                    {
                      "test": "has_biome_tag",
                      "value": "cold"
                    },
                    {
                      "test": "has_biome_tag",
                      "operator": "!=",
                      "value": "ocean"
                    }
                  ]
                },
                {
                  "test": "has_biome_tag",
                  "value": "frozen"
                }
              ]
            },
            "add": { "component_groups": [ "snow_villager" ] }
          },
          {
            "filters": {
              "any_of": [
                {
                  "test": "has_biome_tag",
                  "value": "swamp"
                },
                {
                  "test": "has_biome_tag",
                  "value": "mangrove_swamp"
                }
              ]
            },
            "add": { "component_groups": [ "swamp_villager" ] }
          },
          {
            "filters": {
              "all_of": [
                {
                  "any_of": [
                    {
                      "test": "has_biome_tag",
                      "value": "taiga"
                    },
                    {
                      "test": "has_biome_tag",
                      "value": "extreme_hills"
                    }
                  ]
                },
                {
                  "test": "has_biome_tag",
                  "operator": "!=",
                  "value": "cold"
                }
              ]
            },
            "add": { "component_groups": [ "taiga_villager" ] }
          }
        ]
      },

      "minecraft:spawn_from_village": {
        "sequence": [
          {
            "filters": { "test": "has_component", "operator": "!=", "value": "minecraft:variant" },
            "randomize": [
              {
                "weight": 5,
                "add": { "component_groups": [ "baby", "child_schedule" ] }
              },
              {
                "weight": 95,
                "add": { "component_groups": [ "adult" ] },
                "sequence": [
                  {
                    "randomize": [
                      {
                        "weight": 90,
                        "add": { "component_groups": [ "unskilled", "behavior_peasant", "basic_schedule" ] }
                      },
                      {
                        "weight": 10,
                        "add": { "component_groups": [ "nitwit", "behavior_peasant", "jobless_schedule" ] }
                      }
                    ]
                  }
                ]
              }
            ]
          },
          {
            "filters": { "test": "has_component", "operator": "!=", "value": "minecraft:skin_id" },
            "randomize": [
              {
                "weight": 1,
                "add": { "component_groups": [ "villager_skin_0" ] }
              },
              {
                "weight": 1,
                "add": { "component_groups": [ "villager_skin_1" ] }
              },
              {
                "weight": 1,
                "add": { "component_groups": [ "villager_skin_2" ] }
              },
              {
                "weight": 1,
                "add": { "component_groups": [ "villager_skin_3" ] }
              },
              {
                "weight": 1,
                "add": { "component_groups": [ "villager_skin_4" ] }
              },
              {
                "weight": 1,
                "add": { "component_groups": [ "villager_skin_5" ] }
              }
            ]
          },
          {
            "filters": { 
              "any_of": [
                { "test": "has_biome_tag", "value": "desert" },
                { "test": "has_biome_tag", "value": "mesa" }
              ]
            },
            "add": { "component_groups": [ "desert_villager" ] }
          },
          {
            "filters": { "test": "has_biome_tag", "value": "jungle" },
            "add": { "component_groups": [ "jungle_villager" ] }
          },
          {
            "filters": { "test": "has_biome_tag", "value": "savanna" },
            "add": { "component_groups": [ "savanna_villager" ] }
          },
          {
            "filters": {
              "any_of": [
                { 
                  "all_of": [
                    { "test": "has_biome_tag", "value": "cold" },
                    { "test": "has_biome_tag", "operator": "!=", "value": "ocean" }
                  ]
                },
                { "test": "has_biome_tag", "value": "frozen" }
              ]
            },
            "add": { "component_groups": [ "snow_villager" ] }
          },
          {
            "filters": {
              "any_of": [
                { "test": "has_biome_tag", "value": "swamp" },
                { "test": "has_biome_tag", "value": "mangrove_swamp" }
              ]
            },
            "add": { "component_groups": [ "swamp_villager" ] }
          },
          {
            "filters": {
              "all_of": [
                {
                  "any_of": [
                    { "test": "has_biome_tag", "value": "taiga" },
                    { "test": "has_biome_tag", "value": "extreme_hills" }
                  ]
                },
                { "test": "has_biome_tag", "operator": "!=", "value": "cold" }
              ]
            },
            "add": { "component_groups": [ "taiga_villager" ] }
          }
        ]
      },

      "minecraft:entity_transformed": {
        "sequence": [
          // Transform to baby villager
          {
            "filters": { "test": "has_component", "subject": "other", "operator": "==", "value": "minecraft:is_baby" },
            "add": { "component_groups": [ "baby", "child_schedule" ] }
          },
          {
            // Transform to adult villager
            "filters": { "test": "has_component", "subject": "other", "operator": "!=", "value": "minecraft:is_baby" },
            "sequence": [ 
              // Transform to adult villager
              {
                "add": { "component_groups": [ "adult" ] }
              },
              // new: Transform from zombie/husk to builder_villager
              {
                "filters": {
                  "all_of": [
                    {"test": "is_family", "subject": "other", "value": "builder"},
                    {
                      "any_of": [
                        {"test": "is_family", "subject": "other", "value": "zombie"},
                        {"test": "is_family", "subject": "other", "value": "husk"}
                      ]
                    }
                  ]
                },
                "add": {"component_groups": ["builder"]}  //transforms to builder_villager
                // without losing any component groups
              },
              // new: Transform from builder villager to normal villager unskilled
              {
                "filters": {
                  "all_of": [
                    {"test": "is_family", "subject": "other", "value": "builder_villager"},
                    {
                      "none_of": [
                        {"test": "is_family", "subject": "other", "value": "zombie"},
                        {"test": "is_family", "subject": "other", "value": "husk"}
                      ]
                    } 
                  ]
                },
                "trigger": "minecraft:become_unskilled"
              },
              // Transform to farmer villager
              {
                "filters": { "test": "is_family", "subject": "other", "value": "farmer"},
                "add": { "component_groups": [ "farmer", "behavior_peasant", "farmer_schedule" ] }
              },
              // Transform to fisherman villager
              {
                "filters": { "test": "is_family", "subject": "other", "value": "fisherman"},
                "add": { "component_groups": [ "fisherman", "behavior_peasant", "fisher_schedule" ] }
              },
              // Transform to shepherd villager
              {
                "filters": { "test": "is_family", "subject": "other", "value": "shepherd" },
                "add": { "component_groups": [ "shepherd", "behavior_peasant", "work_schedule" ] }
              },
              // Transform to fletcher villager
              {
                "filters": { "test": "is_family", "subject": "other", "value": "fletcher" },
                "add": { "component_groups": [ "fletcher", "behavior_peasant", "work_schedule" ] }
              },
              // Transform to librarian villager
              {
                "filters": { "test": "is_family", "subject": "other", "value": "librarian" },
                "add": { "component_groups": [ "librarian", "behavior_non_peasant", "librarian_schedule"] }
              },
              // Transform to cartographer villager
              {
                "filters": { "test": "is_family", "subject": "other", "value": "cartographer" },
                "add": { "component_groups": [ "cartographer", "behavior_non_peasant", "work_schedule" ] }
              },
              // Transform to cleric villager
              {
                "filters": { "test": "is_family", "subject": "other", "value": "cleric" },
                "add": { "component_groups": [ "cleric", "behavior_non_peasant", "work_schedule" ] }
              },
              // Transform to armorer villager
              {
                "filters": { "test": "is_family", "subject": "other", "value": "armorer" },
                "add": { "component_groups": [ "armorer", "behavior_non_peasant", "work_schedule" ] }
              },
              // Transform to weaponsmith villager
              {
                "filters": { "test": "is_family", "subject": "other", "value": "weaponsmith" },
                "add": { "component_groups": [ "weaponsmith", "behavior_non_peasant", "work_schedule" ] }
              },
              // Transform to toolsmith villager
              {
                "filters": { "test": "is_family", "subject": "other", "value": "toolsmith" },
                "add": { "component_groups": [ "toolsmith", "behavior_non_peasant", "work_schedule" ] }
              },
              // Transform to butcher villager
              {
                "filters": { "test": "is_family", "subject": "other", "value": "butcher" },
                "add": { "component_groups": [ "butcher", "behavior_non_peasant", "work_schedule" ] }
              },
              // Transform to leatherworker villager
              {
                "filters": { "test": "is_family", "subject": "other", "value": "leatherworker" },
                "add": { "component_groups": [ "leatherworker", "behavior_non_peasant", "work_schedule" ] }
              },
              // Transform to mason villager
              {
                "filters": { "test": "is_family", "subject": "other", "value": "stone_mason" },
                "add": { "component_groups": [ "mason", "behavior_non_peasant", "work_schedule" ] }
              }
            ]
          },
          {
           // Transform from zombie to correct villager skin (mark var already set)
            "filters": { "test": "is_family", "subject": "other", "operator": "==", "value": "zombie_villager" }, 
            "sequence" : [
              {
                "filters": { "test": "is_skin_id", "subject": "other", "value": 0 },
                "add": { "component_groups": [ "villager_skin_0" ] }
              },
              {
                "filters": { "test": "is_skin_id", "subject": "other", "value": 1 },
                "add": { "component_groups": [ "villager_skin_1" ] }
              },
              {
                "filters": { "test": "is_skin_id", "subject": "other", "value": 2 },
                "add": { "component_groups": [ "villager_skin_2" ] }
              },
              {
                "filters": { "test": "is_skin_id", "subject": "other", "value": 3 },
                "add": { "component_groups": [ "villager_skin_3" ] }
              },
              {
                "filters": { "test": "is_skin_id", "subject": "other", "value": 4 },
                "add": { "component_groups": [ "villager_skin_4" ] }
              },
              {
                "filters": { "test": "is_skin_id", "subject": "other", "value": 5 },
                "add": { "component_groups": [ "villager_skin_5" ] }
              },
              {
                "filters": { "test": "is_mark_variant", "subject": "other", "value": 1 },
                "add": { "component_groups": [ "desert_villager" ] }
              },
              {
                "filters": { "test": "is_mark_variant", "subject": "other", "value": 2 },
                "add": { "component_groups": [ "jungle_villager" ] }
              },
              {
                "filters": { "test": "is_mark_variant", "subject": "other", "value": 3 },
                "add": { "component_groups": [ "savanna_villager" ] }
              },
              {
                "filters": { "test": "is_mark_variant", "subject": "other", "value": 4 },
                "add": { "component_groups": [ "snow_villager" ] }
              },
              {
                "filters": { "test": "is_mark_variant", "subject": "other", "value": 5 },
                "add": { "component_groups": [ "swamp_villager" ] }
              },
              {
                "filters": { "test": "is_mark_variant", "subject": "other", "value": 6 },
                "add": { "component_groups": [ "taiga_villager" ] }
              }
            ]
          },
          {
           // Transform from v1 - > v2 to correct villager skin (mark var not set so test biome)
            "filters": { "test": "is_family", "subject": "other", "operator": "==", "value": "villager" }, 
            "sequence" : [
              {
                "randomize": [
                  {
                    "weight": 1,
                    "add": { "component_groups": [ "villager_skin_0" ] }
                  },
                  {
                    "weight": 1,
                    "add": { "component_groups": [ "villager_skin_1" ] }
                  },
                  {
                    "weight": 1,
                    "add": { "component_groups": [ "villager_skin_2" ] }
                  },
                  {
                    "weight": 1,
                    "add": { "component_groups": [ "villager_skin_3" ] }
                  },
                  {
                    "weight": 1,
                    "add": { "component_groups": [ "villager_skin_4" ] }
                  },
                  {
                    "weight": 1,
                    "add": { "component_groups": [ "villager_skin_5" ] }
                  }
                ]
              },
              {
                "filters": { 
                  "any_of": [
                    { "test": "has_biome_tag", "value": "desert" },
                    { "test": "has_biome_tag", "value": "mesa" }
                  ]
                },
                "add": { "component_groups": [ "desert_villager" ] }
              },
              {
                "filters": { "test": "has_biome_tag", "value": "jungle" },
                "add": { "component_groups": [ "jungle_villager" ] }
              },
              {
                "filters": { "test": "has_biome_tag", "value": "savanna" },
                "add": { "component_groups": [ "savanna_villager" ] }
              },
              {
                "filters": {
                  "any_of": [
                    { 
                      "all_of": [
                        { "test": "has_biome_tag", "value": "cold" },
                        { "test": "has_biome_tag", "operator": "!=", "value": "ocean" }
                      ]
                    },
                    { "test": "has_biome_tag", "value": "frozen" }
                  ]
                },
                "add": { "component_groups": [ "snow_villager" ] }
              },
              {
                "filters": {
                  "any_of": [
                    {
                      "test": "has_biome_tag",
                      "value": "swamp"
                    },
                    {
                      "test": "has_biome_tag",
                      "value": "mangrove_swamp"
                    }
                  ]
                },
                "add": { "component_groups": [ "swamp_villager" ] }
              },
              {
                "filters": {
                  "all_of": [
                    {
                      "any_of": [
                        { "test": "has_biome_tag", "value": "taiga" },
                        { "test": "has_biome_tag", "value": "extreme_hills" }
                      ]
                    },
                    { "test": "has_biome_tag", "operator": "!=", "value": "cold" }
                  ]
                },
                "add": { "component_groups": [ "taiga_villager" ] }
              }
            ]
          }
        ]
      },

      "minecraft:entity_born": {
        "sequence": [
          {
            "filters": { "test": "has_component", "operator": "!=", "value": "minecraft:skin_id" },
            "randomize": [
              {
                "weight": 1,
                "add": { "component_groups": [ "villager_skin_0" ] }
              },
              {
                "weight": 1,
                "add": { "component_groups": [ "villager_skin_1" ] }
              },
              {
                "weight": 1,
                "add": { "component_groups": [ "villager_skin_2" ] }
              },
              {
                "weight": 1,
                "add": { "component_groups": [ "villager_skin_3" ] }
              },
              {
                "weight": 1,
                "add": { "component_groups": [ "villager_skin_4" ] }
              },
              {
                "weight": 1,
                "add": { "component_groups": [ "villager_skin_5" ] }
              }
            ]
          },
          {
            "add": { "component_groups": [ "baby", "unskilled", "child_schedule" ] }
          },
          {
            "filters": { "test": "has_biome_tag", "value": "desert" },
            "add": { "component_groups": [ "desert_villager" ] }
          },
          {
            "filters": { "test": "has_biome_tag", "value": "jungle" },
            "add": { "component_groups": [ "jungle_villager" ] }
          },
          {
            "filters": { "test": "has_biome_tag", "value": "savanna" },
            "add": { "component_groups": [ "savanna_villager" ] }
          },
          {
            "filters": {
              "any_of": [
                { "test": "has_biome_tag", "value": "cold" },
                { "test": "has_biome_tag", "value": "frozen" }
              ]
            },
            "add": { "component_groups": [ "snow_villager" ] }
          },
          {
            "filters": {
              "any_of": [
                {
                  "test": "has_biome_tag",
                  "value": "swamp"
                },
                {
                  "test": "has_biome_tag",
                  "value": "mangrove_swamp"
                }
              ]
            },
            "add": { "component_groups": [ "swamp_villager" ] }
          },
          {
            "filters": { "test": "has_biome_tag", "value": "taiga" },
            "add": { "component_groups": [ "taiga_villager" ] }
          }
        ]
      },
        
      "minecraft:spawn_farmer": {
        "randomize": [
          {
            "weight": 5,
            "add": { "component_groups": [ "farmer", "adult", "behavior_peasant", "basic_schedule" ] },
            "remove": { "component_groups": [ "baby", "child_schedule" ] }
          },
          {
            "weight": 5,
            "add": { "component_groups": [ "fisherman", "adult", "behavior_peasant", "basic_schedule" ] },
            "remove": { "component_groups": [ "baby", "child_schedule" ] }
          },
          {
            "weight": 5,
            "add": { "component_groups": [ "shepherd", "adult", "behavior_peasant", "basic_schedule" ] },
            "remove": { "component_groups": [ "baby", "child_schedule" ] }
          },
          {
            "weight": 5,
            "add": { "component_groups": [ "fletcher", "adult", "behavior_peasant", "basic_schedule" ] },
            "remove": { "component_groups": [ "baby", "child_schedule" ] }
          },
          {
            "weight": 5,
            "add": { "component_groups": [ "mason", "adult", "behavior_non_peasant", "work_schedule" ] },
            "remove": { "component_groups": [ "baby", "child_schedule" ] }
          }
        ]
      },
      
      "minecraft:spawn_librarian": {
        "randomize": [
          {
            "weight": 20,
            "add": { "component_groups": [ "librarian", "adult", "behavior_non_peasant", "basic_schedule" ] },
            "remove": { "component_groups": [ "baby", "child_schedule" ] }
          },
          {
            "weight": 20,
            "add": { "component_groups": [ "cartographer", "behavior_non_peasant", "basic_schedule" ] },
            "remove": { "component_groups": [ "baby", "child_schedule" ] }
          }
        ]
      },
      
      "minecraft:spawn_cleric": {
        "add": { "component_groups": [ "cleric", "adult", "behavior_non_peasant", "basic_schedule" ] },
        "remove": { "component_groups": [ "baby", "child_schedule" ] }
      },
      
      "minecraft:spawn_armorer": {
        "randomize": [
          {
            "weight": 6,
            "add": { "component_groups": [ "armorer", "adult", "behavior_non_peasant", "basic_schedule" ] },
            "remove": { "component_groups": [ "baby", "child_schedule" ] }
          },
          {
            "weight": 6,
            "add": { "component_groups": [ "weaponsmith", "adult", "behavior_non_peasant", "basic_schedule" ] },
            "remove": { "component_groups": [ "baby", "child_schedule" ] }
          },
          {
            "weight": 6,
            "add": { "component_groups": [ "toolsmith", "adult", "behavior_non_peasant", "basic_schedule" ] },
            "remove": { "component_groups": [ "baby", "child_schedule" ] }
          }
        ]
      },
      
      "minecraft:spawn_butcher": {
        "randomize": [
          {
            "weight": 10,
            "add": { "component_groups": [ "butcher", "adult", "behavior_non_peasant", "basic_schedule" ] },
            "remove": { "component_groups": [ "baby", "child_schedule" ] }
          },
          {
            "weight": 10,
            "add": { "component_groups": [ "leatherworker", "adult", "behavior_non_peasant", "basic_schedule" ] },
            "remove": { "component_groups": [ "baby", "child_schedule" ] }
          }
        ]
      },
      
      "minecraft:ageable_grow_up": {
        "randomize": [
          {
            "weight": 10,
            "remove": { "component_groups": [ "baby", "child_schedule" ] },
            "add": { "component_groups": [ "adult", "nitwit", "behavior_peasant", "jobless_schedule" ] }
          },
          // 15 variants - unskilled and nitwit leaves 13. 100/13 = 7.69%. Therefore, each vanilla
          // job has 7.69% chance to happen. So, 0.769 * 0.90 chance for non-nitwit is 0.06923. 
          // Builder should have equal probability. 90-6.9 = ~83, leaving 7% chance for builder.
          {
            "weight": 83,
            "remove": { "component_groups": [ "baby", "child_schedule" ] },
            "add": { "component_groups": [ "adult", "unskilled", "behavior_peasant", "basic_schedule" ] }
          },
          {
            "weight": 7,
            "remove": { "component_groups": [ "baby", "child_schedule" ] },
            "trigger": "become_builder"
          }
        ]
      },

      "minecraft:become_unskilled": {
        "remove": { "component_groups": [ "baby", "child_schedule", "job_specific_goals", "trade_components" ] },
        "add": { "component_groups": [ "adult", "unskilled", "behavior_peasant", "basic_schedule" ] }
      },
      
      "minecraft:become_cleric": {
        "remove": { "component_groups": [ "baby", "child_schedule", "job_specific_goals", "trade_components" ] },
        "add": { "component_groups": [ "cleric", "adult", "behavior_non_peasant", "work_schedule" ] }
      },
      
      "minecraft:become_farmer": {
        "remove": { "component_groups": [ "baby", "child_schedule", "job_specific_goals", "trade_components" ] },
        "add": { "component_groups": [ "farmer", "adult", "behavior_peasant", "farmer_schedule" ] }
      },
      
      "minecraft:become_fisherman": {
        "remove": { "component_groups": [ "baby", "child_schedule", "job_specific_goals", "trade_components" ] },
        "add": { "component_groups": [ "fisherman", "adult", "behavior_non_peasant", "fisher_schedule" ] }
      },
      
      "minecraft:become_fletcher": {
        "remove": { "component_groups": [ "baby", "child_schedule", "job_specific_goals", "trade_components" ] },
        "add": { "component_groups": [ "fletcher", "adult", "behavior_non_peasant", "work_schedule" ] }
      },
      
      "minecraft:become_librarian": {
        "remove": { "component_groups": [ "baby", "child_schedule", "job_specific_goals", "trade_components" ] },
        "add": { "component_groups": [ "librarian", "adult", "behavior_non_peasant", "librarian_schedule" ] }
      },
      
      "minecraft:become_cartographer": {
        "remove": { "component_groups": [ "baby", "child_schedule", "job_specific_goals", "trade_components" ] },
        "add": { "component_groups": [ "cartographer", "adult", "behavior_non_peasant", "work_schedule" ] }
      },
      
      "minecraft:become_armorer": {
        "remove": { "component_groups": [ "baby", "child_schedule", "job_specific_goals", "trade_components" ] },
        "add": { "component_groups": [ "armorer", "adult", "behavior_non_peasant", "work_schedule" ] }
      },
      
      "minecraft:become_weaponsmith": {
        "remove": { "component_groups": [ "baby", "child_schedule", "job_specific_goals", "trade_components" ] },
        "add": { "component_groups": [ "weaponsmith", "adult", "behavior_non_peasant", "work_schedule" ] }
      },
      
      "minecraft:become_toolsmith": {
        "remove": { "component_groups": [ "baby", "child_schedule", "job_specific_goals", "trade_components" ] },
        "add": { "component_groups": [ "toolsmith", "adult", "behavior_non_peasant", "work_schedule" ] }
      },
      
      "minecraft:become_butcher": {
        "remove": { "component_groups": [ "baby", "child_schedule", "job_specific_goals", "trade_components" ] },
        "add": { "component_groups": [ "butcher", "adult", "behavior_non_peasant", "work_schedule" ] }
      },
      
      "minecraft:become_leatherworker": {
        "remove": { "component_groups": [ "baby", "child_schedule", "job_specific_goals", "trade_components" ] },
        "add": { "component_groups": [ "leatherworker", "adult", "behavior_non_peasant", "work_schedule" ] }
      },
      
      "minecraft:become_shepherd": {
        "remove": { "component_groups": [ "baby", "child_schedule", "job_specific_goals", "trade_components" ] },
        "add": { "component_groups": [ "shepherd", "adult", "behavior_non_peasant", "work_schedule" ] }
      },
      
      "minecraft:become_mason": {
        "remove": { "component_groups": [ "baby", "child_schedule", "job_specific_goals", "trade_components" ] },
        "add": { "component_groups": [ "mason", "adult", "behavior_non_peasant", "work_schedule" ] }
      },

      // new
      "become_builder": {
        "remove": { "component_groups": [ "baby", "child_schedule", "job_specific_goals", "trade_components", "unskilled" ] },
        "add": { "component_groups": [ "builder" ] }
      },

      "minecraft:become_builder": {
        "trigger": "become_builder"
      },
      
      "minecraft:schedule_wander_villager": {
        "remove": { "component_groups": [ "home_schedule_villager", "bed_schedule_villager", "wander_schedule_villager", "job_specific_goals", "play_schedule_villager", "trade_resupply_component_group" ] },
        "add": { "component_groups": [ "wander_schedule_villager" ] }
      },

      // "minecraft:schedule_gather_villager" -> overridden for the Albert Whitefish song easter egg
      
      "minecraft:schedule_home_villager": {
        "remove": { "component_groups": [ "bed_schedule_villager", "wander_schedule_villager", "gather_schedule_villager", "job_specific_goals", "play_schedule_villager", "trade_resupply_component_group" ] },
        "add": { "component_groups": [ "home_schedule_villager" ] }
      },
      
      "minecraft:schedule_bed_villager": {
        "remove": { "component_groups": [ "home_schedule_villager", "gather_schedule_villager", "wander_schedule_villager", "job_specific_goals", "play_schedule_villager", "trade_resupply_component_group" ] },
        "add": { "component_groups": [ "bed_schedule_villager" ] }
      },
      
      "minecraft:schedule_play_villager": {
        "remove": { "component_groups": [ "home_schedule_villager", "gather_schedule_villager", "wander_schedule_villager", "bed_schedule_villager", "job_specific_goals", "trade_resupply_component_group" ] },
        "add": { "component_groups": [ "play_schedule_villager" ] }
      },
      
      "minecraft:schedule_work_pro_villager": {
        "remove": { "component_groups": [ "home_schedule_villager", "gather_schedule_villager", "wander_schedule_villager", "bed_schedule_villager", "play_schedule_villager" ] },
        "add": { "component_groups": [ "work_schedule_villager" ] }
      },
      
      // MRxSIR: farmer scheduler is here
      // ** add new things to this
      "minecraft:schedule_work_farmer": {
        "remove": {
          "component_groups": ["home_schedule_villager", "gather_schedule_villager", "wander_schedule_villager", "bed_schedule_villager", "job_specific_goals", "play_schedule_villager"]
        },
        "add": {
          "component_groups": [
            "work_schedule_farmer",
            "farmer_default_shareables",
            "look_for_guide_stone"
          ]
        }
      },
      
      "minecraft:schedule_work_fisher": {
        "remove": { "component_groups": [ "home_schedule_villager", "gather_schedule_villager", "wander_schedule_villager", "bed_schedule_villager", "job_specific_goals", "play_schedule_villager" ] },
        "add": { "component_groups": [ "work_schedule_fisher" ] }
      },

      "minecraft:schedule_work_librarian": {
        "remove": { "component_groups": [ "home_schedule_villager", "gather_schedule_villager", "wander_schedule_villager", "bed_schedule_villager", "job_specific_goals", "play_schedule_villager" ] },
        "add": { "component_groups": [ "work_schedule_librarian" ] }
      },

      "minecraft:resupply_trades": {
        "sequence": [
          // added this to prevent resupply when trade components are disabled
          {
            "filters": {
              "subject": "self", "test": "has_tag", "value": "trade_components_off"
            },
            "queue_command": {"command": "tag @s add resupply_trades_pending"}
          },
          {
            "filters": {
              "subject": "self", "test": "has_tag", "operator": "not", "value": "trade_components_off"
            },
            "add": { "component_groups": [ "trade_resupply_component_group" ] }
          }
        ]
      },

      "minecraft:start_celebrating": { // Event must be called exactly this for village to fire it when a raid is won
        "add": { "component_groups": [ "minecraft:celebrate" ] }
      },

      "minecraft:stop_celebrating": {
        "remove": { "component_groups": [ "minecraft:celebrate" ] }
      },

      //-------events for Albert Whitefish song
      "minecraft:schedule_gather_villager": {
        "sequence": [
          {
            "remove": { "component_groups": [ "bed_schedule_villager", "wander_schedule_villager", "home_schedule_villager", "job_specific_goals", "play_schedule_villager", "trade_resupply_component_group" ] },
            "add": { "component_groups": [ "gather_schedule_villager" ] }
          },
          //added this below to allow for Albert Whitefish song
          {
            "filters": {
              "test": "has_tag",
              "value": "albert_whitefish_song_leader"
            },
            "add": { "component_groups": [ "check_for_singing_conditions" ] }
          }
        ]
      },

      "tag_as_song_leader": {
        "sequence": [
          {
            "filters": [
              {
                "operator": "not",
                "test": "has_tag",
                "value": "albert_whitefish_song_leader"
              }
            ],
            "queue_command": {
              "command": [
                "tag @s add albert_whitefish_song_leader",
                "msg @a[r=9] now song leader for Albert Whitefish song."   //debug
              ]
            }
          },
          {
            "filters": [
              {
                "test": "has_tag",
                "value": "albert_whitefish_song_leader"
              }
            ],
            "queue_command": {
              "command": [
                "tag @s remove albert_whitefish_song_leader",
                "msg @a[r=9] no longer song leader for Albert Whitefish song." //debug
              ]
            }
          }
        ]
      },

      "check_for_audience": {
        "queue_command": {
          "command": "execute as @s at @s if entity @e[family=villager,r=12,c=7,tag=!albert_whitefish_song_leader] if entity @e[type=player,r=18] run event entity @s found_valid_singing_conditions"
        }
      },

      "found_valid_singing_conditions": {
        "remove": { "component_groups": ["check_for_singing_conditions"] },
        "trigger": "start_albert_whitefish_song"
      },

      "start_albert_whitefish_song": {
        "add": { 
          "component_groups": ["albert_whitefish_song_timer"] //resumes normal behavior after
        },
        "queue_command": {
          "command": [
            "execute as @s at @s run playsound villager.albert_whitefish_song @a[r=70] ~ ~ ~"
          ]
        }
      },

      "ended_albert_whitefish_song": {
        "remove": { "component_groups": ["albert_whitefish_song_timer"] }
      },

      "add_gather_for_albert_whitefish_song": {
        "add": { "component_groups": [ "gather_for_albert_whitefish_song" ] }
      },

      "remove_gather_for_albert_whitefish_song": {
        "remove": { "component_groups": [ "gather_for_albert_whitefish_song" ] }
      }
    }
  }
}